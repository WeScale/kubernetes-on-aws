apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-dns
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: external-dns
rules:
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get","watch","list"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get","watch","list"]
- apiGroups: ["extensions"] 
  resources: ["ingresses"] 
  verbs: ["get","watch","list"]
- apiGroups: [""]
  resources: ["nodes"]
  verbs: ["list"]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: external-dns-viewer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-dns
subjects:
- kind: ServiceAccount
  name: external-dns
  namespace: kube-system
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: external-dns-public
  namespace: kube-system
spec:
  strategy:
    type: Recreate
  replicas: 3
  template:
    metadata:
      labels:
        app: external-dns-public
        name: external-dns
      annotations:
        iam.amazonaws.com/role: externalDNS_role
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - external-dns-public
              topologyKey: "kubernetes.io/hostname"
      serviceAccountName: external-dns
      containers:
      - name: external-dns-public
        image: bitnami/external-dns:0.5.8
        args:
        - --source=service
        - --source=ingress
        - --domain-filter={{ environ('PUBLIC_DNS_ZONE') }} # will make ExternalDNS see only the hosted zones matching provided domain, omit to process all available hosted zones
        - --provider=aws
        - --policy=upsert-only # would prevent ExternalDNS from deleting any records, omit to enable full synchronization
        - --aws-zone-type=public # only look at public hosted zones (valid values are public, private or no value for both)
        - --registry=txt
        - --txt-owner-id=my-identifier
        ports:
        - containerPort: 7979
        livenessProbe:
          httpGet:
            path: /healthz
            port: 7979
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 2
        readinessProbe:
          httpGet:
            path: /healthz
            port: 7979
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: external-dns-private
  namespace: kube-system
spec:
  strategy:
    type: Recreate
  replicas: 3
  template:
    metadata:
      labels:
        app: external-dns-private
        name: external-dns
      annotations:
        iam.amazonaws.com/role: externalDNS_role
    spec:
      serviceAccountName: external-dns
      containers:
      - name: external-dns
        image: bitnami/external-dns:0.5.8
        args:
        - --source=service
        - --source=ingress
        - --domain-filter={{ environ('PRIVATE_DNS_ZONE') }} # will make ExternalDNS see only the hosted zones matching provided domain, omit to process all available hosted zones
        - --provider=aws
        - --policy=upsert-only # would prevent ExternalDNS from deleting any records, omit to enable full synchronization
        - --aws-zone-type=private # only look at public hosted zones (valid values are public, private or no value for both)
        - --registry=txt
        - --txt-owner-id=my-identifier
        ports:
        - containerPort: 7979
        livenessProbe:
          httpGet:
            path: /healthz
            port: 7979
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 2
        readinessProbe:
          httpGet:
            path: /healthz
            port: 7979
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 6